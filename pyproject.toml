# Core package and development configuration.
#
# Build system dependencies ----------

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

# Project package metadata ----------

[tool.poetry]
name = "interop"
packages = [
  { include = "interop" }
]
exclude = [
  "*/tests/"
]
version = "0.1.1"
description = "Interoperability library for developing scientific workflows"
authors = ["Andrew Abi-Mansour"]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
]
readme = "README.md"
homepage = "https://github.com/anabiman/interop"
repository = "https://github.com/anabiman/interop"
documentation = "https://www.google.com"

# Dependencies ----------

# The conda channels and platforms from which to resolve dependencies
[tool.conda-lock]
channels = [
  "conda-forge",
]
platforms = [
  "linux-64",
  "osx-64",
  "osx-arm64",
  "win-64",
]

# Runtime dependencies that are only conda installable
[tool.conda-lock.dependencies]

# Runtime dependencies that are both pip and conda installable
[tool.poetry.dependencies]
python = ">=3.11.0,<4"
importlib_metadata = {version = ">=4", python = "~3.7"}
ray = "*"
numpy = "*"
pydantic = "*"

# Development dependencies that are at least pip installable.
# If dependencies are only pip installable, set
# them as {version = "<version number>", source = "pypi"}


[tool.poetry.dev-dependencies]
black = {version = "23.7.0", source = "pypi"}
flake8-pyproject = {version = "1.2.3", source ="pypi"}
flake8-bugbear = {version = "23.7.10", source = "pypi"}
flake8-comprehensions = {version = "3.14.0", source = "pypi"}
flake8-logging-format = {version = "0.9.0", source = "pypi"}
flake8-mutable = {version = "1.2.0", source = "pypi"}
cruft = {version = "2.15.0", source = "pypi"}
commitizen = {version = "3.6.0", source = "pypi"}
grayskull = "1.1.2"
isort = "5.12.0"
myst-parser = "2.0.0"
packaging = "23.1"
pip = "*"
pytest = "7.4.0"
pytest-cov = "4.1.0"
Sphinx = "7.2.2"
sphinx-rtd-theme = "1.3.0"


# Dev tool configuration ---

# Black formatting parameters
[tool.black]
line-length = 99

# Coverage settings
[tool.coverage.run]
branch = true
source = ["interop"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise AssertionError",
  "raise NotImplementedError",
  "pass",
  "pytest.mark.skip"
]
show_missing = true
fail_under = 75

# Isort settings
[tool.isort]
profile = "black"

# Pytest options
[tool.pytest.ini_options]
xfail_strict = true
testpaths = "interop/tests"

# Flake8 settings
[tool.flake8]
ignore = [
  "E203",
  "W503",
  "W504"
]
application-import-names = [
  "interop",
  "tests"
]
max-complexity = 10
max-line-length = 99

# Commitizen settings
[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.1"
version_files = [
    "pyproject.toml:version"
]
update_changelog_on_bump = true
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
] 
