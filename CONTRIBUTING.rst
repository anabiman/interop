Contributing Guide
==================

Setup
~~~~~

Set up your development environment with::

    git clone https://github.com/anabiman/interop
    cd interop
    poetry install

This requires `poetry <https://python-poetry.org/>`__ installed for installing the library in a virtual environment.


Testing and Validation
~~~~~~~~~~~~~~~~~~~~~~

Run the tests with::

    poetry run pytest -v interop/tests


.. _Structured Notes:

Structured Notes in Contributions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This project uses <https://commitizen-tools.github.io/commitizen>`__ to keep track of version release
and changes in the CHANGELOG.md file.

Documentation
~~~~~~~~~~~~~

`Sphinx <http://www.sphinx-doc.org/>`_ documentation can be built from the docs dir.

The static HTML files are stored in the ``docs/_build/html`` directory.

For a primer on how to write documentation using Sphinx and reStructuredText,
see `this page <https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html>`__.
A more human-friendly tutorial is also located
`here <https://sphinx-tutorial.readthedocs.io/step-1/>`__.

Releases and Versioning
~~~~~~~~~~~~~~~~~~~~~~~

Anything that is merged into the ``main`` branch will be automatically deployed
to pypi. 

This project uses `Semantic Versioning <http://semver.org>`_ by analyzing
the ``type`` key of notes generated by ``detail``. See the
*Structured Notes in Contributions* section above for more information on
how to choose the type when creating a note.
